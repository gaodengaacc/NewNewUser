apply plugin: 'com.android.application'

def buildTime() {
    return new Date().format("yyMMddHHmmss", TimeZone.getTimeZone("GMT+8"))
}

def _versionCode() {
    return Integer.parseInt(new Date(getGitCommitTime()).format("yyMMddHHmm", TimeZone.getTimeZone("GMT+8")));
}

def getGitCommitHash() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        return "";
    }
}

def getGitCommitTime() {
    // maybe cause Exception
    return 'git show -s --format=%cd HEAD'.execute().text.trim()
}

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('keystore/debug.keystore')
            storePassword 'android'
        }
        release {
            keyAlias '律云在线'
            keyPassword 'lyun-app-release-psw'
            storeFile file('keystore/release.keystore')
            storePassword 'lyun-app-release-psw'
        }
    }

    defaultConfig {
        applicationId "com.lyun.user"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode _versionCode()
        versionName "4.0.0"
        multiDexEnabled true
        signingConfig signingConfigs.debug
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "MIPUSH_APP_ID", '"2882303761517467815"'
        buildConfigField "String", "MIPUSH_APP_KEY", '"5111746715815"'
    }

    dataBinding {
        enabled true
    }

    sourceSets {
        main {
            res.srcDirs += 'src/main/res-nim'
        }
    }

    buildTypes {
        debug {
            debuggable true
            shrinkResources false
            signingConfig signingConfigs.release

            versionNameSuffix = " debug-${buildTime()}"
//            applicationIdSuffix = 'debug'

            buildConfigField "String", "HOST", '"http://172.16.133.175:8080"'
            buildConfigField "String", "MIPUSH_CERT_NAME", '"userdebug"'
            buildConfigField "String", "BAIDU_MAP_AK", '"eqrUfj2oWMjy3pmQb8RRRjddu4Fc5zsF"'
            buildConfigField "int", "BAIDU_MAP_GEO_TABLE_ID", "138163"
            buildConfigField "String", "WX_PAY_APPID", '"wx702f2d3dc2c89936"'
            buildConfigField "String", "QQ_APPID", '"1104650295"'
            buildConfigField "String", "WB_APPKEY", '"1107847230"'

            manifestPlaceholders.putAll([
                    APPLICATION_ID    : defaultConfig.applicationId,
                    NIM_APPKEY        : "2bbbb39221e2ea7d61904f61acc72d52",
                    UMENG_APP_KEY     : "55a4612067e58ebb5f004e14",
                    BaiduMobAd_STAT_ID: "ac161ce77e"])
        }
        release {
            debuggable false
            signingConfig signingConfigs.release
            //是否清理无用资源
            shrinkResources false
            //是否启用zipAlign压缩
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "HOST", '"https://lyt.lyun.com:8444"'
            buildConfigField "String", "MIPUSH_CERT_NAME", '"user"'
            buildConfigField "String", "BAIDU_MAP_AK", '"I8mvwSd8WolPcyoTUCPf5QI1"'
            buildConfigField "int", "BAIDU_MAP_GEO_TABLE_ID", "108200"
            buildConfigField "String", "WX_PAY_APPID", '"wx702f2d3dc2c89936"'
            buildConfigField "String", "QQ_APPID", '"1104650295"'
            buildConfigField "String", "WB_APPKEY", '"1107847230"'

            manifestPlaceholders.putAll([
                    APPLICATION_ID    : defaultConfig.applicationId,
                    NIM_APPKEY        : "2bbbb39221e2ea7d61904f61acc72d52",
                    MIPUSH_CERT_NAME  : "user",
                    UMENG_APP_KEY     : "55a45f2967e58e1f1400529a",
                    BaiduMobAd_STAT_ID: "dc2fb90b27"])
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'android/databinding/DataBinderMapper.java'
        exclude 'android/databinding/DataBindingComponent.java'
        exclude 'android/databinding/DynamicUtil.java'
    }

    flavorDimensions "channel"

    productFlavors {
        official {
            dimension "channel"
        }
        baidu {
            dimension "channel"
        }
        apk91 {
            dimension "channel"
        }
        hiapk {
            dimension "channel"
        }
        wandoujia {
            dimension "channel"
        }
        tencent {
            dimension "channel"
        }
        xiaomi {
            dimension "channel"
        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == 'debug') {
            variant.setIgnore(!variant.flavors.get(0).name.equals('official'))
        }
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders.putAll([
                VERSION_CODE      : defaultConfig.versionCode,
                VERSION_NAME      : defaultConfig.versionName,
                BaiduMobAd_CHANNEL: name,
                UMENG_CHANNEL     : name])
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (variant.buildType.name != 'debug') {
                def fileName = "${variant.buildType.name}_User_v${defaultConfig.versionName}_${buildTime()}_${variant.productFlavors[0].name}.apk"
                variant.getPackageApplication().outputDirectory = new File(getProjectDir().absolutePath)
                // apkDirectory = new File(getProjectDir().absolutePath)
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    outputFileName = fileName
                }
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':library')
    implementation project(':wheel')
    implementation project(':roundrectview')
    implementation project(':citypick')
    //testCompile 'org.mockito:mockito-core:1.10.19'
    implementation files('libs/alipaySdk-20161222.jar')
    implementation files('libs/open_sdk_r5793.jar')
    implementation 'com.sina.weibo.sdk:core:4.1.0:openDefaultRelease@aar'
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:percent:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    implementation 'com.jakewharton:butterknife:8.4.0'
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    annotationProcessor 'net.funol.databinding.watchdog:compiler:1.0.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.1.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}